import{_ as s,c as a,o as n,Q as e}from"./chunks/framework.0fcaa977.js";const u=JSON.parse('{"title":"createBlockFilter","description":"An Action for creating a new Block Filter.","frontmatter":{"head":[["meta",{"property":"og:title","content":"createBlockFilter"}],["meta",{"name":"description","content":"An Action for creating a new Block Filter."}],["meta",{"property":"og:description","content":"An Action for creating a new Block Filter."}]]},"headers":[],"relativePath":"docs/actions/public/createBlockFilter.md","filePath":"docs/actions/public/createBlockFilter.md"}'),l={name:"docs/actions/public/createBlockFilter.md"},o=e(`<h1 id="createblockfilter" tabindex="-1">createBlockFilter <a class="header-anchor" href="#createblockfilter" aria-label="Permalink to &quot;createBlockFilter&quot;">​</a></h1><p>Creates a Filter to listen for new block hashes that can be used with <a href="/docs/actions/public/getFilterChanges.html"><code>getFilterChanges</code></a>.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-y1iar" id="tab-S2ygcP3" checked="checked"><label for="tab-S2ygcP3">example.ts</label><input type="radio" name="group-y1iar" id="tab-AXCJMnb"><label for="tab-AXCJMnb">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">filter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">createBlockFilter</span><span style="color:#E1E4E8;">() </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// { id: &quot;0x345a6572337856574a76364e457a4366&quot;, type: &#39;block&#39; }</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">filter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">createBlockFilter</span><span style="color:#24292E;">() </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// { id: &quot;0x345a6572337856574a76364e457a4366&quot;, type: &#39;block&#39; }</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="/docs/glossary/types.html#filter"><code>Filter</code></a></p><h2 id="json-rpc-methods" tabindex="-1">JSON-RPC Methods <a class="header-anchor" href="#json-rpc-methods" aria-label="Permalink to &quot;JSON-RPC Methods&quot;">​</a></h2><p><a href="https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter" target="_blank" rel="noreferrer"><code>eth_newBlockFilter</code></a></p>`,8),t=[o];function p(c,r,i,y,d,E){return n(),a("div",null,t)}const F=s(l,[["render",p]]);export{u as __pageData,F as default};
