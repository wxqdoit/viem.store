import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.a5052463.js";const u=JSON.parse('{"title":"watchPendingTransactions","description":"Watches and returns pending transaction hashes.","frontmatter":{"head":[["meta",{"property":"og:title","content":"watchPendingTransactions"}],["meta",{"name":"description","content":"Watches and returns pending transaction hashes."}],["meta",{"property":"og:description","content":"Watches and returns pending transaction hashes."}]]},"headers":[],"relativePath":"docs/actions/public/watchPendingTransactions.md","filePath":"docs/actions/public/watchPendingTransactions.md"}'),o={name:"docs/actions/public/watchPendingTransactions.md"},p=l(`<h1 id="watchpendingtransactions" tabindex="-1">watchPendingTransactions <a class="header-anchor" href="#watchpendingtransactions" aria-label="Permalink to &quot;watchPendingTransactions&quot;">​</a></h1><p>Watches and returns pending transaction hashes.</p><p>This Action will batch up all the pending transactions found within the <a href="#pollinginterval-optional"><code>pollingInterval</code></a>, and invoke them via <a href="#ontransactions"><code>onTransactions</code></a>.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-CG5Wo" id="tab-s7BXNg1" checked="checked"><label for="tab-s7BXNg1">example.ts</label><input type="radio" name="group-CG5Wo" id="tab-qErL2OT"><label for="tab-qErL2OT">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchPendingTransactions</span><span style="color:#E1E4E8;">( </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  { </span><span style="color:#B392F0;">onTransactions</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">hashes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(hashes) }</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">)</span></span>
<span class="line has-focus"><span style="color:#6A737D;">/**</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * &gt; [&#39;0x...&#39;, &#39;0x...&#39;, &#39;0x...&#39;]</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * &gt; [&#39;0x...&#39;, &#39;0x...&#39;]</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * &gt; [&#39;0x...&#39;, &#39;0x...&#39;, &#39;0x...&#39;, ...]</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> */</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchPendingTransactions</span><span style="color:#24292E;">( </span></span>
<span class="line has-focus"><span style="color:#24292E;">  { </span><span style="color:#6F42C1;">onTransactions</span><span style="color:#24292E;">: </span><span style="color:#E36209;">hashes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(hashes) }</span></span>
<span class="line has-focus"><span style="color:#24292E;">)</span></span>
<span class="line has-focus"><span style="color:#6A737D;">/**</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * &gt; [&#39;0x...&#39;, &#39;0x...&#39;, &#39;0x...&#39;]</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * &gt; [&#39;0x...&#39;, &#39;0x...&#39;]</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * &gt; [&#39;0x...&#39;, &#39;0x...&#39;, &#39;0x...&#39;, ...]</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> */</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>UnwatchFn</code></p><p>A function that can be invoked to stop watching for new pending transaction hashes.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="ontransactions" tabindex="-1">onTransactions <a class="header-anchor" href="#ontransactions" aria-label="Permalink to &quot;onTransactions&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(hashes: &#39;0x\${string}&#39;[]) =&gt; void</code></li></ul><p>The new pending transaction hashes.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchPendingTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  { </span><span style="color:#B392F0;">onTransactions</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">hashes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(hashes) } </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchPendingTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line has-focus"><span style="color:#24292E;">  { </span><span style="color:#6F42C1;">onTransactions</span><span style="color:#24292E;">: </span><span style="color:#E36209;">hashes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(hashes) } </span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="batch-optional" tabindex="-1">batch (optional) <a class="header-anchor" href="#batch-optional" aria-label="Permalink to &quot;batch (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>true</code></li></ul><p>Whether or not to batch the transaction hashes between polling intervals.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchPendingTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    batch: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onTransactions</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">hashes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(hashes),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchPendingTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    batch: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onTransactions</span><span style="color:#24292E;">: </span><span style="color:#E36209;">hashes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(hashes),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="onerror-optional" tabindex="-1">onError (optional) <a class="header-anchor" href="#onerror-optional" aria-label="Permalink to &quot;onError (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(error: Error) =&gt; void</code></li></ul><p>Error thrown from listening for new pending transactions.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchPendingTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onError</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(error) </span></span>
<span class="line"><span style="color:#E1E4E8;">    onTransactions: </span><span style="color:#FFAB70;">hashes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(hashes),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchPendingTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onError</span><span style="color:#24292E;">: </span><span style="color:#E36209;">error</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(error) </span></span>
<span class="line"><span style="color:#24292E;">    onTransactions: </span><span style="color:#E36209;">hashes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(hashes),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="poll-optional" tabindex="-1">poll (optional) <a class="header-anchor" href="#poll-optional" aria-label="Permalink to &quot;poll (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code> for WebSocket Clients, <code>true</code> for non-WebSocket Clients</li></ul><p>Whether or not to use a polling mechanism to check for new pending transactions instead of a WebSocket subscription.</p><p>This option is only configurable for Clients with a <a href="/docs/clients/transports/websocket.html">WebSocket Transport</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, webSocket } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">webSocket</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchPendingTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onTransactions</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">transactions</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(transactions),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    poll: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, webSocket } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">webSocket</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchPendingTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onTransactions</span><span style="color:#24292E;">: </span><span style="color:#E36209;">transactions</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(transactions),</span></span>
<span class="line has-focus"><span style="color:#24292E;">    poll: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="pollinginterval-optional" tabindex="-1">pollingInterval (optional) <a class="header-anchor" href="#pollinginterval-optional" aria-label="Permalink to &quot;pollingInterval (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li></ul><p>Polling frequency (in ms). Defaults to the Client&#39;s <code>pollingInterval</code> config.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient..</span><span style="color:#B392F0;">watchPendingTransactions</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    pollingInterval: </span><span style="color:#79B8FF;">1_000</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onTransactions</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">hashes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(hashes),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient..</span><span style="color:#6F42C1;">watchPendingTransactions</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    pollingInterval: </span><span style="color:#005CC5;">1_000</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onTransactions</span><span style="color:#24292E;">: </span><span style="color:#E36209;">hashes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(hashes),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="json-rpc-methods" tabindex="-1">JSON-RPC Methods <a class="header-anchor" href="#json-rpc-methods" aria-label="Permalink to &quot;JSON-RPC Methods&quot;">​</a></h2><ul><li>When <code>poll: true</code><ul><li>Calls <a href="https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter" target="_blank" rel="noreferrer"><code>eth_newPendingTransactionFilter</code></a> to initialize the filter.</li><li>Calls <a href="https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges" target="_blank" rel="noreferrer"><code>eth_getFilterChanges</code></a> on a polling interval.</li></ul></li><li>When <code>poll: false</code> &amp; WebSocket Transport, uses a WebSocket subscription via <a href="https://docs.alchemy.com/reference/eth-subscribe-polygon" target="_blank" rel="noreferrer"><code>eth_subscribe</code></a> and the <code>&quot;newPendingTransactions&quot;</code> event.</li></ul>`,32),e=[p];function t(c,r,i,E,y,h){return a(),n("div",null,e)}const g=s(o,[["render",t]]);export{u as __pageData,g as default};
