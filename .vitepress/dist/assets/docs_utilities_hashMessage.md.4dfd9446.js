import{_ as s,c as a,o as e,Q as n}from"./chunks/framework.a5052463.js";const f=JSON.parse('{"title":"hashMessage","description":"Hashes a message in EIP-191 format.","frontmatter":{"head":[["meta",{"property":"og:title","content":"hashMessage"}],["meta",{"name":"description","content":"Hashes a message in EIP-191 format."}],["meta",{"property":"og:description","content":"Hashes a message in EIP-191 format."}]]},"headers":[],"relativePath":"docs/utilities/hashMessage.md","filePath":"docs/utilities/hashMessage.md"}'),l={name:"docs/utilities/hashMessage.md"},o=n(`<h1 id="hashmessage" tabindex="-1">hashMessage <a class="header-anchor" href="#hashmessage" aria-label="Permalink to &quot;hashMessage&quot;">​</a></h1><p>Calculates an Ethereum-specific hash in <a href="https://eips.ethereum.org/EIPS/eip-191" target="_blank" rel="noreferrer">EIP-191 format</a>: <code>keccak256(&quot;\\x19Ethereum Signed Message:\\n&quot; + len(message) + message))</code>.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { hashMessage } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { hashMessage } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { hashMessage } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">hashMessage</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;hello world&#39;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// 0xd9eba16ed0ecae432b71fe008c98cc872bb4cc214d3220a36f365326cf807d68</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6A737D;">// Hash a hex data value.  </span></span>
<span class="line has-focus"><span style="color:#B392F0;">hashMessage</span><span style="color:#E1E4E8;">({ raw: </span><span style="color:#9ECBFF;">&#39;0x68656c6c6f20776f726c64&#39;</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line has-focus"><span style="color:#6A737D;">// 0xd9eba16ed0ecae432b71fe008c98cc872bb4cc214d3220a36f365326cf807d68</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6A737D;">// Hash a bytes data value.  </span></span>
<span class="line has-focus"><span style="color:#B392F0;">hashMessage</span><span style="color:#E1E4E8;">({ </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  raw: Uint8Array.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">([</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">104</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">101</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">108</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">108</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">111</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">119</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">111</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">114</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">108</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  ])})</span></span>
<span class="line has-focus"><span style="color:#6A737D;">// 0xd9eba16ed0ecae432b71fe008c98cc872bb4cc214d3220a36f365326cf807d68</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { hashMessage } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">hashMessage</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;hello world&#39;</span><span style="color:#24292E;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// 0xd9eba16ed0ecae432b71fe008c98cc872bb4cc214d3220a36f365326cf807d68</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6A737D;">// Hash a hex data value.  </span></span>
<span class="line has-focus"><span style="color:#6F42C1;">hashMessage</span><span style="color:#24292E;">({ raw: </span><span style="color:#032F62;">&#39;0x68656c6c6f20776f726c64&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line has-focus"><span style="color:#6A737D;">// 0xd9eba16ed0ecae432b71fe008c98cc872bb4cc214d3220a36f365326cf807d68</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6A737D;">// Hash a bytes data value.  </span></span>
<span class="line has-focus"><span style="color:#6F42C1;">hashMessage</span><span style="color:#24292E;">({ </span></span>
<span class="line has-focus"><span style="color:#24292E;">  raw: Uint8Array.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">([</span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#005CC5;">104</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">101</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">108</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">108</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">111</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">32</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">119</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">111</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">114</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">108</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  ])})</span></span>
<span class="line has-focus"><span style="color:#6A737D;">// 0xd9eba16ed0ecae432b71fe008c98cc872bb4cc214d3220a36f365326cf807d68</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="/docs/glossary/types.html#hex"><code>Hex</code></a></p><p>The hashed message.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="message" tabindex="-1">message <a class="header-anchor" href="#message" aria-label="Permalink to &quot;message&quot;">​</a></h3><p>Message to hash.</p><ul><li><strong>Type:</strong> <code>string | { raw: Hex | ByteArray }</code></li></ul>`,13),p=[o];function c(t,r,h,i,y,E){return e(),a("div",null,p)}const u=s(l,[["render",c]]);export{f as __pageData,u as default};
