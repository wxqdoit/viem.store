import{_ as s,c as a,o as n,Q as e}from"./chunks/framework.a5052463.js";const b=JSON.parse('{"title":"parseAbi","description":"Parses human-readable ABI into JSON.","frontmatter":{"description":"Parses human-readable ABI into JSON.","title":"parseAbi","head":[["meta",{"property":"og:title","content":"parseAbi"}],["meta",{"property":"og:description","content":"Parses human-readable ABI into JSON."}]]},"headers":[],"relativePath":"docs/abi/parseAbi.md","filePath":"docs/abi/parseAbi.md"}'),o={name:"docs/abi/parseAbi.md"},p=e(`<h1 id="parseabi" tabindex="-1">parseAbi <a class="header-anchor" href="#parseabi" aria-label="Permalink to &quot;parseAbi&quot;">​</a></h1><p>Parses human-readable ABI into JSON <a href="/docs/glossary/types.html#abi"><code>Abi</code></a>. Re-exported from <a href="https://abitype.dev/api/human.html#parseabi-1" target="_blank" rel="noreferrer">ABIType</a>.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbi } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbi } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbi } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">abi</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAbi</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//  ^? const abi: readonly [{ name: &quot;balanceOf&quot;; type: &quot;function&quot;; stateMutability:...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;function balanceOf(address owner) view returns (uint256)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 amount)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbi } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">abi</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAbi</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//  ^? const abi: readonly [{ name: &quot;balanceOf&quot;; type: &quot;function&quot;; stateMutability:...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;function balanceOf(address owner) view returns (uint256)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 amount)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">])</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="/docs/glossary/types.html#abi"><code>Abi</code></a></p><p>The JSON ABI.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="signatures" tabindex="-1">signatures <a class="header-anchor" href="#signatures" aria-label="Permalink to &quot;signatures&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string[]</code></li></ul><p>Human-readable ABI.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbi } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">abi</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAbi</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//  ^? const abi: readonly [{ name: &quot;balanceOf&quot;; type: &quot;function&quot;; stateMutability:...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;function balanceOf(address owner) view returns (uint256)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 amount)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbi } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">abi</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAbi</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//  ^? const abi: readonly [{ name: &quot;balanceOf&quot;; type: &quot;function&quot;; stateMutability:...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;function balanceOf(address owner) view returns (uint256)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 amount)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">])</span></span></code></pre></div>`,14),l=[p];function t(r,c,i,d,y,E){return n(),a("div",null,l)}const h=s(o,[["render",t]]);export{b as __pageData,h as default};
