import{_ as s,c as a,o as n,Q as o}from"./chunks/framework.0fcaa977.js";const u=JSON.parse('{"title":"fromRlp","description":"Decodes a RLP value into a decoded hex value or byte array.","frontmatter":{"head":[["meta",{"property":"og:title","content":"fromRlp"}],["meta",{"name":"description","content":"Decodes a RLP value into a decoded hex value or byte array."}],["meta",{"property":"og:description","content":"Decodes a RLP value into a decoded hex value or byte array."}]]},"headers":[],"relativePath":"docs/utilities/fromRlp.md","filePath":"docs/utilities/fromRlp.md"}'),l={name:"docs/utilities/fromRlp.md"},e=o(`<h1 id="fromrlp" tabindex="-1">fromRlp <a class="header-anchor" href="#fromrlp" aria-label="Permalink to &quot;fromRlp&quot;">​</a></h1><p>Decodes a <a href="https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp" target="_blank" rel="noreferrer">Recursive-Length Prefix (RLP)</a> value into a decoded hex value or byte array.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { fromRlp } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { fromRlp } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { fromRlp } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">fromRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x850123456789&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;hex&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x123456789&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">fromRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0xc67f7f838081e8&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;hex&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// [&#39;0x7f&#39;, &#39;0x7f&#39;, &#39;0x8081e8&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">fromRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x89010203040506070809&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;bytes&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//  Uint8Array [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">fromRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uint8Array</span><span style="color:#E1E4E8;"> ([</span><span style="color:#79B8FF;">133</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">35</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">69</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">103</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">137</span><span style="color:#E1E4E8;">]), </span><span style="color:#9ECBFF;">&#39;hex&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x123456789&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { fromRlp } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">fromRlp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x850123456789&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;hex&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x123456789&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">fromRlp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0xc67f7f838081e8&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;hex&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// [&#39;0x7f&#39;, &#39;0x7f&#39;, &#39;0x8081e8&#39;]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">fromRlp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x89010203040506070809&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;bytes&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//  Uint8Array [1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">fromRlp</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uint8Array</span><span style="color:#24292E;"> ([</span><span style="color:#005CC5;">133</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">35</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">69</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">103</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">137</span><span style="color:#24292E;">]), </span><span style="color:#032F62;">&#39;hex&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x123456789&quot;</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Hex | ByteArray</code></p><p>The hex value or byte array.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Hex | ByteArray</code></li></ul><p>The RLP value to decode.</p><h3 id="to" tabindex="-1">to <a class="header-anchor" href="#to" aria-label="Permalink to &quot;to&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>&quot;bytes&quot; | &quot;hex&quot;</code></li></ul><p>The output type.</p>`,16),p=[e];function t(r,c,y,i,E,d){return n(),a("div",null,p)}const m=s(l,[["render",t]]);export{u as __pageData,m as default};
