import{_ as a,c as s,o as e,Q as n}from"./chunks/framework.0fcaa977.js";const b=JSON.parse('{"title":"parseAbiParameter","description":"Parses human-readable ABI parameter into ABI parameter.","frontmatter":{"description":"Parses human-readable ABI parameter into ABI parameter.","title":"parseAbiParameter","head":[["meta",{"property":"og:title","content":"parseAbiParameter"}],["meta",{"property":"og:description","content":"Parses human-readable ABI parameter into ABI parameter."}]]},"headers":[],"relativePath":"docs/abi/parseAbiParameter.md","filePath":"docs/abi/parseAbiParameter.md"}'),p={name:"docs/abi/parseAbiParameter.md"},r=n(`<h1 id="parseabiparameter" tabindex="-1">parseAbiParameter <a class="header-anchor" href="#parseabiparameter" aria-label="Permalink to &quot;parseAbiParameter&quot;">​</a></h1><p>Parses human-readable ABI parameter into <a href="/docs/glossary/types.html#abiparameter"><code>AbiParameter</code></a>. Re-exported from <a href="https://abitype.dev/api/human.html#parseabiparameter-1" target="_blank" rel="noreferrer">ABIType</a>.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbiParameter } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbiParameter } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbiParameter } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">abiParameter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAbiParameter</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;address from&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//    ^? const abiParameter: { type: &quot;address&quot;; name: &quot;from&quot;; }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbiParameter } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">abiParameter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAbiParameter</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;address from&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//    ^? const abiParameter: { type: &quot;address&quot;; name: &quot;from&quot;; }</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="/docs/glossary/types.html#abi"><code>Abi</code></a></p><p>Parsed ABI parameter.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="signature" tabindex="-1">signature <a class="header-anchor" href="#signature" aria-label="Permalink to &quot;signature&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string | string[]</code></li></ul><p>Human-Readable ABI parameter.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbiParameter } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">abiParameter</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAbiParameter</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">//  ^? const abiParameter: { type: &quot;tuple&quot;; components: [{ type: &quot;string&quot;; name:...</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;Baz bar&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;struct Baz { string name; }&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbiParameter } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">abiParameter</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAbiParameter</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">//  ^? const abiParameter: { type: &quot;tuple&quot;; components: [{ type: &quot;string&quot;; name:...</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;Baz bar&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;struct Baz { string name; }&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">])</span></span></code></pre></div>`,14),o=[r];function t(l,c,i,m,y,d){return e(),s("div",null,o)}const h=a(p,[["render",t]]);export{b as __pageData,h as default};
