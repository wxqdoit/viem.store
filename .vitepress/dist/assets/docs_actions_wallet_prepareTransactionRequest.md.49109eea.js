import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.0fcaa977.js";const h=JSON.parse('{"title":"prepareTransactionRequest","description":"Prepares a transaction request for signing.","frontmatter":{"head":[["meta",{"property":"og:title","content":"prepareTransactionRequest"}],["meta",{"name":"description","content":"Prepares a transaction request for signing."}],["meta",{"property":"og:description","content":"Prepares a transaction request for signing."}]]},"headers":[],"relativePath":"docs/actions/wallet/prepareTransactionRequest.md","filePath":"docs/actions/wallet/prepareTransactionRequest.md"}'),p={name:"docs/actions/wallet/prepareTransactionRequest.md"},o=l(`<h1 id="preparetransactionrequest" tabindex="-1">prepareTransactionRequest <a class="header-anchor" href="#preparetransactionrequest" aria-label="Permalink to &quot;prepareTransactionRequest&quot;">​</a></h1><p>Prepares a transaction request for signing by populating a nonce, gas limit, fee values, and a transaction type.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-UlIgM" id="tab-DZLJHVM" checked="checked"><label for="tab-DZLJHVM">example.ts</label><input type="radio" name="group-UlIgM" id="tab-CNiYQK-"><label for="tab-CNiYQK-">config.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { account, walletClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./config&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line has-focus"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareTransactionRequest</span><span style="color:#E1E4E8;">({ </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">})</span></span>
<span class="line has-focus"><span style="color:#6A737D;">/**</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * {</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   account: &#39;0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   to: &#39;0x70997970C51812dc3A010C7d01b50e0d17dc79C8&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxFeePerGas: 150000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxPriorityFeePerGas: 1000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   nonce: 69,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   type: &#39;eip1559&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   value: 1000000000000000000n</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * }</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">signature</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">signTransaction</span><span style="color:#E1E4E8;">(request)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hash</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">sendRawTransaction</span><span style="color:#E1E4E8;">(signature)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { account, walletClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./config&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line has-focus"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareTransactionRequest</span><span style="color:#24292E;">({ </span></span>
<span class="line has-focus"><span style="color:#24292E;">  account,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span></span>
<span class="line has-focus"><span style="color:#24292E;">})</span></span>
<span class="line has-focus"><span style="color:#6A737D;">/**</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * {</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   account: &#39;0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   to: &#39;0x70997970C51812dc3A010C7d01b50e0d17dc79C8&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxFeePerGas: 150000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxPriorityFeePerGas: 1000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   nonce: 69,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   type: &#39;eip1559&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   value: 1000000000000000000n</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * }</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">signature</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">signTransaction</span><span style="color:#24292E;">(request)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hash</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">sendRawTransaction</span><span style="color:#24292E;">(signature)</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createWalletClient, custom } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { privateKeyToAccount } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/accounts&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">walletClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createWalletClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(window.ethereum)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// JSON-RPC Account</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">account</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">getAddresses</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#6A737D;">// Local Account</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">account</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">privateKeyToAccount</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createWalletClient, custom } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { privateKeyToAccount } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/accounts&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">walletClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createWalletClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(window.ethereum)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// JSON-RPC Account</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">account</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">getAddresses</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#6A737D;">// Local Account</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">account</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">privateKeyToAccount</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">)</span></span></code></pre></div></div></div><h3 id="account-hoisting" tabindex="-1">Account Hoisting <a class="header-anchor" href="#account-hoisting" aria-label="Permalink to &quot;Account Hoisting&quot;">​</a></h3><p>If you do not wish to pass an <code>account</code> to every <code>prepareTransactionRequest</code>, you can also hoist the Account on the Wallet Client (see <code>config.ts</code>).</p><p><a href="/docs/clients/wallet.html#account">Learn more</a>.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-iYNfu" id="tab-tawciB2" checked="checked"><label for="tab-tawciB2">example.ts</label><input type="radio" name="group-iYNfu" id="tab-n6Fj0s8"><label for="tab-n6Fj0s8">config.ts (JSON-RPC Account)</label><input type="radio" name="group-iYNfu" id="tab-1WQAZ5H"><label for="tab-1WQAZ5H">config.ts (Local Account)</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { walletClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./config&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span></span>
<span class="line has-focus"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareTransactionRequest</span><span style="color:#E1E4E8;">({ </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">})</span></span>
<span class="line has-focus"><span style="color:#6A737D;">/**</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * {</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   account: &#39;0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   to: &#39;0x70997970C51812dc3A010C7d01b50e0d17dc79C8&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxFeePerGas: 150000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxPriorityFeePerGas: 1000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   nonce: 69,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   type: &#39;eip1559&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   value: 1000000000000000000n</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * }</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> */</span></span>
<span class="line has-focus"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">signature</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">signTransaction</span><span style="color:#E1E4E8;">(request)</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hash</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">sendRawTransaction</span><span style="color:#E1E4E8;">(signature)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { walletClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./config&#39;</span></span>
<span class="line"><span style="color:#24292E;"> </span></span>
<span class="line has-focus"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareTransactionRequest</span><span style="color:#24292E;">({ </span></span>
<span class="line has-focus"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span></span>
<span class="line has-focus"><span style="color:#24292E;">})</span></span>
<span class="line has-focus"><span style="color:#6A737D;">/**</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * {</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   account: &#39;0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   to: &#39;0x70997970C51812dc3A010C7d01b50e0d17dc79C8&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxFeePerGas: 150000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   maxPriorityFeePerGas: 1000000000n,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   nonce: 69,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   type: &#39;eip1559&#39;,</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> *   value: 1000000000000000000n</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> * }</span></span>
<span class="line has-focus"><span style="color:#6A737D;"> */</span></span>
<span class="line has-focus"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">signature</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">signTransaction</span><span style="color:#24292E;">(request)</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hash</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">sendRawTransaction</span><span style="color:#24292E;">(signature)</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createWalletClient, custom } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Retrieve Account from an EIP-1193 Provider.</span></span>
<span class="line highlighted"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">account</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> window.ethereum.</span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">({ </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  method: </span><span style="color:#9ECBFF;">&#39;eth_requestAccounts&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">walletClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createWalletClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(window.ethereum)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createWalletClient, custom } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Retrieve Account from an EIP-1193 Provider.</span></span>
<span class="line highlighted"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">account</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> window.ethereum.</span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">({ </span></span>
<span class="line highlighted"><span style="color:#24292E;">  method: </span><span style="color:#032F62;">&#39;eth_requestAccounts&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line highlighted"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">walletClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createWalletClient</span><span style="color:#24292E;">({</span></span>
<span class="line highlighted"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(window.ethereum)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createWalletClient, custom } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { privateKeyToAccount } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/accounts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">walletClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createWalletClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  account: </span><span style="color:#B392F0;">privateKeyToAccount</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x...&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(window.ethereum)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createWalletClient, custom } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { privateKeyToAccount } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/accounts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">walletClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createWalletClient</span><span style="color:#24292E;">({</span></span>
<span class="line highlighted"><span style="color:#24292E;">  account: </span><span style="color:#6F42C1;">privateKeyToAccount</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x...&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(window.ethereum)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><a href="/docs/glossary/types.html#transactionrequest"><code>TransactionRequest</code></a></p><p>The transaction request.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="account" tabindex="-1">account <a class="header-anchor" href="#account" aria-label="Permalink to &quot;account&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Account | Address</code></li></ul><p>The Account to send the transaction from.</p><p>Accepts a <a href="/docs/clients/wallet.html#json-rpc-accounts">JSON-RPC Account</a> or <a href="/docs/clients/wallet.html#local-accounts-private-key-mnemonic-etc">Local Account (Private Key, etc)</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  account: </span><span style="color:#9ECBFF;">&#39;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  account: </span><span style="color:#032F62;">&#39;0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="to" tabindex="-1">to <a class="header-anchor" href="#to" aria-label="Permalink to &quot;to&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>0x\${string}</code></li></ul><p>The transaction recipient or contract address.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  nonce: </span><span style="color:#79B8FF;">69</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  nonce: </span><span style="color:#005CC5;">69</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="accesslist-optional" tabindex="-1">accessList (optional) <a class="header-anchor" href="#accesslist-optional" aria-label="Permalink to &quot;accessList (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <a href="/docs/glossary/types.html#accesslist"><code>AccessList</code></a></li></ul><p>The access list.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  accessList: [ </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      address: </span><span style="color:#9ECBFF;">&#39;0x1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      storageKeys: [</span><span style="color:#9ECBFF;">&#39;0x1&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    },</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  accessList: [ </span></span>
<span class="line has-focus"><span style="color:#24292E;">    {</span></span>
<span class="line has-focus"><span style="color:#24292E;">      address: </span><span style="color:#032F62;">&#39;0x1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">      storageKeys: [</span><span style="color:#032F62;">&#39;0x1&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line has-focus"><span style="color:#24292E;">    },</span></span>
<span class="line has-focus"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="chain-optional" tabindex="-1">chain (optional) <a class="header-anchor" href="#chain-optional" aria-label="Permalink to &quot;chain (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <a href="/docs/glossary/types.html#chain"><code>Chain</code></a></li><li><strong>Default:</strong> <code>walletClient.chain</code></li></ul><p>The target chain. If there is a mismatch between the wallet&#39;s current chain &amp; the target chain, an error will be thrown.</p><p>The chain is also used to infer its request type (e.g. the Celo chain has a <code>gatewayFee</code> that you can pass through to <code>prepareSendTransaction</code>).</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line has-focus"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { optimism } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  chain: optimism, </span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line has-focus"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { optimism } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  chain: optimism, </span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="data-optional" tabindex="-1">data (optional) <a class="header-anchor" href="#data-optional" aria-label="Permalink to &quot;data (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>0x\${string}</code></li></ul><p>A contract hashed method call with encoded args.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  data: </span><span style="color:#9ECBFF;">&#39;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  data: </span><span style="color:#032F62;">&#39;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="gasprice-optional" tabindex="-1">gasPrice (optional) <a class="header-anchor" href="#gasprice-optional" aria-label="Permalink to &quot;gasPrice (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>bigint</code></li></ul><p>The price (in wei) to pay per gas. Only applies to <a href="/docs/glossary/terms.html#legacy-transaction">Legacy Transactions</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  gasPrice: </span><span style="color:#B392F0;">parseGwei</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;20&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#B392F0;">parseEther</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  gasPrice: </span><span style="color:#6F42C1;">parseGwei</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;20&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#6F42C1;">parseEther</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">) </span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="maxfeepergas-optional" tabindex="-1">maxFeePerGas (optional) <a class="header-anchor" href="#maxfeepergas-optional" aria-label="Permalink to &quot;maxFeePerGas (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>bigint</code></li></ul><p>Total fee per gas (in wei), inclusive of <code>maxPriorityFeePerGas</code>. Only applies to <a href="/docs/glossary/terms.html#eip-1559-transaction">EIP-1559 Transactions</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  maxFeePerGas: </span><span style="color:#B392F0;">parseGwei</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;20&#39;</span><span style="color:#E1E4E8;">),  </span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#B392F0;">parseEther</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  maxFeePerGas: </span><span style="color:#6F42C1;">parseGwei</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;20&#39;</span><span style="color:#24292E;">),  </span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#6F42C1;">parseEther</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="maxpriorityfeepergas-optional" tabindex="-1">maxPriorityFeePerGas (optional) <a class="header-anchor" href="#maxpriorityfeepergas-optional" aria-label="Permalink to &quot;maxPriorityFeePerGas (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>bigint</code></li></ul><p>Max priority fee per gas (in wei). Only applies to <a href="/docs/glossary/terms.html#eip-1559-transaction">EIP-1559 Transactions</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  maxFeePerGas: </span><span style="color:#B392F0;">parseGwei</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;20&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  maxPriorityFeePerGas: </span><span style="color:#B392F0;">parseGwei</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#B392F0;">parseEther</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  maxFeePerGas: </span><span style="color:#6F42C1;">parseGwei</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;20&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line has-focus"><span style="color:#24292E;">  maxPriorityFeePerGas: </span><span style="color:#6F42C1;">parseGwei</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#6F42C1;">parseEther</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="nonce-optional" tabindex="-1">nonce (optional) <a class="header-anchor" href="#nonce-optional" aria-label="Permalink to &quot;nonce (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li></ul><p>Unique number identifying this transaction.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  value: </span><span style="color:#79B8FF;">1000000000000000000</span><span style="color:#F97583;">n</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  nonce: </span><span style="color:#79B8FF;">69</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  value: </span><span style="color:#005CC5;">1000000000000000000</span><span style="color:#D73A49;">n</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  nonce: </span><span style="color:#005CC5;">69</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="value-optional" tabindex="-1">value (optional) <a class="header-anchor" href="#value-optional" aria-label="Permalink to &quot;value (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>bigint</code></li></ul><p>Value in wei sent with this transaction.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">request</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> walletClient.</span><span style="color:#B392F0;">prepareSendTransaction</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  account,</span></span>
<span class="line"><span style="color:#E1E4E8;">  to: </span><span style="color:#9ECBFF;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  value: </span><span style="color:#B392F0;">parseEther</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">  nonce: </span><span style="color:#79B8FF;">69</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">request</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> walletClient.</span><span style="color:#6F42C1;">prepareSendTransaction</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  account,</span></span>
<span class="line"><span style="color:#24292E;">  to: </span><span style="color:#032F62;">&#39;0x70997970c51812dc3a010c7d01b50e0d17dc79c8&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  value: </span><span style="color:#6F42C1;">parseEther</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">  nonce: </span><span style="color:#005CC5;">69</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div>`,54),e=[o];function c(t,r,i,E,y,d){return n(),a("div",null,e)}const F=s(p,[["render",c]]);export{h as __pageData,F as default};
