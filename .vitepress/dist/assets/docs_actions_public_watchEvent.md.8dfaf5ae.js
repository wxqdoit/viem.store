import{_ as a,c as n,o as l,Q as s,k as p}from"./chunks/framework.0fcaa977.js";const b=JSON.parse('{"title":"watchEvent","description":"Watches and returns emitted Event Logs.","frontmatter":{"head":[["meta",{"property":"og:title","content":"watchEvent"}],["meta",{"name":"description","content":"Watches and returns emitted Event Logs."}],["meta",{"property":"og:description","content":"Watches and returns emitted Event Logs."}]]},"headers":[],"relativePath":"docs/actions/public/watchEvent.md","filePath":"docs/actions/public/watchEvent.md"}'),o={name:"docs/actions/public/watchEvent.md"},e=s(`<h1 id="watchevent" tabindex="-1">watchEvent <a class="header-anchor" href="#watchevent" aria-label="Permalink to &quot;watchEvent&quot;">​</a></h1><p>Watches and returns emitted <a href="/docs/glossary/terms.html#event-log">Event Logs</a>.</p><p>This Action will batch up all the Event Logs found within the <a href="#pollinginterval-optional"><code>pollingInterval</code></a>, and invoke them via <a href="#onlogs"><code>onLogs</code></a>.</p><p><code>watchEvent</code> will attempt to create an <a href="https://viem.sh/docs/actions/public/createEventFilter.html" target="_blank" rel="noreferrer">Event Filter</a> and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (ie. <code>eth_newFilter</code>), then <code>watchEvent</code> will fall back to using <a href="/docs/actions/public/getLogs.html"><code>getLogs</code></a> instead.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>By default, you can watch all broadcasted events to the blockchain by just passing <code>onLogs</code>.</p><p>These events will be batched up into <a href="/docs/glossary/terms.html#event-log">Event Logs</a> and sent to <code>onLogs</code>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0ITwW" id="tab-yZ4O1pg" checked="checked"><label for="tab-yZ4O1pg">example.ts</label><input type="radio" name="group-0ITwW" id="tab-cn9zb-Z"><label for="tab-cn9zb-Z">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { wagmiAbi } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./abi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { wagmiAbi } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./abi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><h2 id="scoping" tabindex="-1">Scoping <a class="header-anchor" href="#scoping" aria-label="Permalink to &quot;Scoping&quot;">​</a></h2><p>You can also scope <code>watchEvent</code> to a set of given attributes (listed below).</p><h3 id="address" tabindex="-1">Address <a class="header-anchor" href="#address" aria-label="Permalink to &quot;Address&quot;">​</a></h3><p><code>watchEvent</code> can be scoped to an <strong>address</strong>:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-TjrTc" id="tab-PciBdPD" checked="checked"><label for="tab-PciBdPD">example.ts</label><input type="radio" name="group-TjrTc" id="tab-chwegOS"><label for="tab-chwegOS">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { wagmiAbi } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./abi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  address: </span><span style="color:#9ECBFF;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { wagmiAbi } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./abi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  address: </span><span style="color:#032F62;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><h3 id="event" tabindex="-1">Event <a class="header-anchor" href="#event" aria-label="Permalink to &quot;Event&quot;">​</a></h3><p><code>watchEvent</code> can be scoped to an <strong>event</strong>.</p><p>The <code>event</code> argument takes in an event in ABI format – we have a <a href="/docs/abi/parseAbiItem.html"><code>parseAbiItem</code> utility</a> that you can use to convert from a human-readable event signature → ABI.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-XZBrg" id="tab-E0rr1EA" checked="checked"><label for="tab-E0rr1EA">example.ts</label><input type="radio" name="group-XZBrg" id="tab-rie35tA"><label for="tab-rie35tA">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line has-focus"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbiItem } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { wagmiAbi } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./abi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  address: </span><span style="color:#9ECBFF;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  event: </span><span style="color:#B392F0;">parseAbiItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line has-focus"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbiItem } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { wagmiAbi } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./abi&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  address: </span><span style="color:#032F62;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  event: </span><span style="color:#6F42C1;">parseAbiItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><p>By default, <code>event</code> accepts the <a href="/docs/glossary/types.html#abievent"><code>AbiEvent</code></a> type:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-klA_5" id="tab-NO5n-dP" checked="checked"><label for="tab-NO5n-dP">example.ts</label><input type="radio" name="group-klA_5" id="tab-j7ajfg7"><label for="tab-j7ajfg7">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(publicClient, {</span></span>
<span class="line"><span style="color:#E1E4E8;">  address: </span><span style="color:#9ECBFF;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  event: { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    name: </span><span style="color:#9ECBFF;">&#39;Transfer&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    inputs: [</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      { type: </span><span style="color:#9ECBFF;">&#39;address&#39;</span><span style="color:#E1E4E8;">, indexed: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, name: </span><span style="color:#9ECBFF;">&#39;from&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      { type: </span><span style="color:#9ECBFF;">&#39;address&#39;</span><span style="color:#E1E4E8;">, indexed: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, name: </span><span style="color:#9ECBFF;">&#39;to&#39;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      { type: </span><span style="color:#9ECBFF;">&#39;uint256&#39;</span><span style="color:#E1E4E8;">, indexed: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, name: </span><span style="color:#9ECBFF;">&#39;value&#39;</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    ] </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(publicClient, {</span></span>
<span class="line"><span style="color:#24292E;">  address: </span><span style="color:#032F62;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  event: { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    name: </span><span style="color:#032F62;">&#39;Transfer&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line has-focus"><span style="color:#24292E;">    inputs: [</span></span>
<span class="line has-focus"><span style="color:#24292E;">      { type: </span><span style="color:#032F62;">&#39;address&#39;</span><span style="color:#24292E;">, indexed: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">&#39;from&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line has-focus"><span style="color:#24292E;">      { type: </span><span style="color:#032F62;">&#39;address&#39;</span><span style="color:#24292E;">, indexed: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">&#39;to&#39;</span><span style="color:#24292E;"> },</span></span>
<span class="line has-focus"><span style="color:#24292E;">      { type: </span><span style="color:#032F62;">&#39;uint256&#39;</span><span style="color:#24292E;">, indexed: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, name: </span><span style="color:#032F62;">&#39;value&#39;</span><span style="color:#24292E;"> }</span></span>
<span class="line has-focus"><span style="color:#24292E;">    ] </span></span>
<span class="line has-focus"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><h3 id="arguments" tabindex="-1">Arguments <a class="header-anchor" href="#arguments" aria-label="Permalink to &quot;Arguments&quot;">​</a></h3><p><code>watchEvent</code> can be scoped to given <strong><em>indexed</em> arguments</strong> on the event:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-eNGxB" id="tab-phoWTWd" checked="checked"><label for="tab-phoWTWd">example.ts</label><input type="radio" name="group-eNGxB" id="tab-U_6E5yf"><label for="tab-U_6E5yf">client.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbiItem } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { publicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  address: </span><span style="color:#9ECBFF;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  event: </span><span style="color:#B392F0;">parseAbiItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  args: { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    from: </span><span style="color:#9ECBFF;">&#39;0xd8da6bf26964af9d7eed9e03e53415d37aa96045&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    to: </span><span style="color:#9ECBFF;">&#39;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#39;</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbiItem } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { publicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  address: </span><span style="color:#032F62;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  event: </span><span style="color:#6F42C1;">parseAbiItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line has-focus"><span style="color:#24292E;">  args: { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    from: </span><span style="color:#032F62;">&#39;0xd8da6bf26964af9d7eed9e03e53415d37aa96045&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">    to: </span><span style="color:#032F62;">&#39;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#39;</span></span>
<span class="line has-focus"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }]</span></span>
<span class="line"><span style="color:#6A737D;">// &gt; [{ ... }, { ... }, { ... }, { ... }]</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div></div></div><p>Only indexed arguments in <code>event</code> are candidates for <code>args</code>.</p><p>These arguments can also be an array to indicate that other values can exist in the position:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  address: </span><span style="color:#9ECBFF;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  event: </span><span style="color:#B392F0;">parseAbiItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  args: { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// &#39;0xd8da...&#39; OR &#39;0xa5cc...&#39; OR &#39;0xa152...&#39;</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    from: [</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;0xd8da6bf26964af9d7eed9e03e53415d37aa96045&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      </span><span style="color:#9ECBFF;">&#39;0xa152f8bb749c55e9943a3a0a3111d18ee2b3f94e&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    ],</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  onLogs: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  address: </span><span style="color:#032F62;">&#39;0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  event: </span><span style="color:#6F42C1;">parseAbiItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line has-focus"><span style="color:#24292E;">  args: { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// &#39;0xd8da...&#39; OR &#39;0xa5cc...&#39; OR &#39;0xa152...&#39;</span></span>
<span class="line has-focus"><span style="color:#24292E;">    from: [</span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;0xd8da6bf26964af9d7eed9e03e53415d37aa96045&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">      </span><span style="color:#032F62;">&#39;0xa152f8bb749c55e9943a3a0a3111d18ee2b3f94e&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">    ],</span></span>
<span class="line has-focus"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  onLogs: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="multiple-events" tabindex="-1">Multiple Events <a class="header-anchor" href="#multiple-events" aria-label="Permalink to &quot;Multiple Events&quot;">​</a></h3><p><code>watchEvent</code> can be scoped to <strong>multiple events</strong>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  events: </span><span style="color:#B392F0;">parseAbi</span><span style="color:#E1E4E8;">([ </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;event Approval(address indexed owner, address indexed sender, uint256 value)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  ]),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  events: </span><span style="color:#6F42C1;">parseAbi</span><span style="color:#24292E;">([ </span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;event Approval(address indexed owner, address indexed sender, uint256 value)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  ]),</span></span>
<span class="line has-focus"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>Note: <code>watchEvent</code> scoped to multiple events cannot be also scoped with <a href="#arguments">indexed arguments</a> (<code>args</code>).</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>UnwatchFn</code></p><p>A function that can be invoked to stop watching for new Event Logs.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="onlogs" tabindex="-1">onLogs <a class="header-anchor" href="#onlogs" aria-label="Permalink to &quot;onLogs&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(logs: Log[]) =&gt; void</code></li></ul><p>The new Event Logs.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  { </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs) } </span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line has-focus"><span style="color:#24292E;">  { </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs) } </span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="address-optional" tabindex="-1">address (optional) <a class="header-anchor" href="#address-optional" aria-label="Permalink to &quot;address (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Address | Address[]</code></li></ul><p>The contract address or a list of addresses from which Logs should originate.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    address: </span><span style="color:#9ECBFF;">&#39;0xfba3912ca04dd458c843e2ee08967fc04f3579c2&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs) </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    address: </span><span style="color:#032F62;">&#39;0xfba3912ca04dd458c843e2ee08967fc04f3579c2&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs) </span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="event-optional" tabindex="-1">event (optional) <a class="header-anchor" href="#event-optional" aria-label="Permalink to &quot;event (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <a href="/docs/glossary/types.html#abievent"><code>AbiEvent</code></a></li></ul><p>The event in ABI format.</p><p>A <a href="/docs/abi/parseAbiItem.html"><code>parseAbiItem</code> utility</a> is exported from viem that converts from a human-readable event signature → ABI.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line has-focus"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { parseAbiItem } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line"><span style="color:#E1E4E8;">    address: </span><span style="color:#9ECBFF;">&#39;0xfba3912ca04dd458c843e2ee08967fc04f3579c2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    event: </span><span style="color:#B392F0;">parseAbiItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#E1E4E8;">), </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs) </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line has-focus"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { parseAbiItem } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line"><span style="color:#24292E;">    address: </span><span style="color:#032F62;">&#39;0xfba3912ca04dd458c843e2ee08967fc04f3579c2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">    event: </span><span style="color:#6F42C1;">parseAbiItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#24292E;">), </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs) </span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="args-optional" tabindex="-1">args (optional) <a class="header-anchor" href="#args-optional" aria-label="Permalink to &quot;args (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> Inferred.</li></ul><p>A list of <em>indexed</em> event arguments.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line"><span style="color:#E1E4E8;">    address: </span><span style="color:#9ECBFF;">&#39;0xfba3912ca04dd458c843e2ee08967fc04f3579c2&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    event: </span><span style="color:#B392F0;">parseAbiItem</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    args: { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">     from: </span><span style="color:#9ECBFF;">&#39;0xd8da6bf26964af9d7eed9e03e53415d37aa96045&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      to: </span><span style="color:#9ECBFF;">&#39;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#39;</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    onLogs: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs) </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line"><span style="color:#24292E;">    address: </span><span style="color:#032F62;">&#39;0xfba3912ca04dd458c843e2ee08967fc04f3579c2&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    event: </span><span style="color:#6F42C1;">parseAbiItem</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;event Transfer(address indexed from, address indexed to, uint256 value)&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line has-focus"><span style="color:#24292E;">    args: { </span></span>
<span class="line has-focus"><span style="color:#24292E;">     from: </span><span style="color:#032F62;">&#39;0xd8da6bf26964af9d7eed9e03e53415d37aa96045&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line has-focus"><span style="color:#24292E;">      to: </span><span style="color:#032F62;">&#39;0xa5cc3c03994db5b0d9a5eedd10cabab0813678ac&#39;</span></span>
<span class="line has-focus"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    onLogs: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs) </span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="batch-optional" tabindex="-1">batch (optional) <a class="header-anchor" href="#batch-optional" aria-label="Permalink to &quot;batch (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>true</code></li></ul><p>Whether or not to batch the Event Logs between polling intervals.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    batch: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    batch: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="onerror-optional" tabindex="-1">onError (optional) <a class="header-anchor" href="#onerror-optional" aria-label="Permalink to &quot;onError (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>(error: Error) =&gt; void</code></li></ul><p>Error thrown from listening for new Event Logs.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onError</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">error</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(error) </span></span>
<span class="line"><span style="color:#E1E4E8;">    onLogs: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onError</span><span style="color:#24292E;">: </span><span style="color:#E36209;">error</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(error) </span></span>
<span class="line"><span style="color:#24292E;">    onLogs: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="poll-optional" tabindex="-1">poll (optional) <a class="header-anchor" href="#poll-optional" aria-label="Permalink to &quot;poll (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean</code></li><li><strong>Default:</strong> <code>false</code> for WebSocket Clients, <code>true</code> for non-WebSocket Clients</li></ul><p>Whether or not to use a polling mechanism to check for new logs instead of a WebSocket subscription.</p><p>This option is only configurable for Clients with a <a href="/docs/clients/transports/websocket.html">WebSocket Transport</a>.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, webSocket } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">publicClient</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">webSocket</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs),</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    poll: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, webSocket } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">publicClient</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">webSocket</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs),</span></span>
<span class="line has-focus"><span style="color:#24292E;">    poll: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h3 id="pollinginterval-optional" tabindex="-1">pollingInterval (optional) <a class="header-anchor" href="#pollinginterval-optional" aria-label="Permalink to &quot;pollingInterval (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li></ul><p>Polling frequency (in ms). Defaults to the Client&#39;s <code>pollingInterval</code> config.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">unwatch</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> publicClient.</span><span style="color:#B392F0;">watchEvent</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  { </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    pollingInterval: </span><span style="color:#79B8FF;">1_000</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">onLogs</span><span style="color:#E1E4E8;">: </span><span style="color:#FFAB70;">logs</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logs),</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">unwatch</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> publicClient.</span><span style="color:#6F42C1;">watchEvent</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  { </span></span>
<span class="line has-focus"><span style="color:#24292E;">    pollingInterval: </span><span style="color:#005CC5;">1_000</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">onLogs</span><span style="color:#24292E;">: </span><span style="color:#E36209;">logs</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logs),</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="live-example" tabindex="-1">Live Example <a class="header-anchor" href="#live-example" aria-label="Permalink to &quot;Live Example&quot;">​</a></h2><p>Check out the usage of <code>watchEvent</code> in the live <a href="https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/logs_event-logs" target="_blank" rel="noreferrer">Event Logs Example</a> below.</p>`,69),t=p("iframe",{frameborder:"0",width:"100%",height:"500px",src:"https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/logs_event-logs?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=0&ctl=1"},null,-1),c=s('<h2 id="json-rpc-methods" tabindex="-1">JSON-RPC Methods <a class="header-anchor" href="#json-rpc-methods" aria-label="Permalink to &quot;JSON-RPC Methods&quot;">​</a></h2><p><strong>When poll <code>true</code> and RPC Provider supports <code>eth_newFilter</code>:</strong></p><ul><li>Calls <a href="https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter" target="_blank" rel="noreferrer"><code>eth_newFilter</code></a> to create a filter (called on initialize).</li><li>On a polling interval, it will call <a href="https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges" target="_blank" rel="noreferrer"><code>eth_getFilterChanges</code></a>.</li></ul><p><strong>When poll <code>true</code> RPC Provider does not support <code>eth_newFilter</code>:</strong></p><ul><li>Calls <a href="https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs" target="_blank" rel="noreferrer"><code>eth_getLogs</code></a> for each block between the polling interval.</li></ul><p><strong>When poll <code>false</code> and WebSocket Transport:</strong></p><ul><li>Uses a WebSocket subscription via <code>eth_subscribe</code> and the &quot;logs&quot; event.</li></ul>',7),r=[e,t,c];function E(i,y,d,h,u,g){return l(),n("div",null,r)}const v=a(o,[["render",E]]);export{b as __pageData,v as default};
