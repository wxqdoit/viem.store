import{_ as s,c as a,o as n,Q as o}from"./chunks/framework.a5052463.js";const h=JSON.parse('{"title":"toRlp","description":"Encodes a hex value or byte array into a RLP encoded value.","frontmatter":{"head":[["meta",{"property":"og:title","content":"toRlp"}],["meta",{"name":"description","content":"Encodes a hex value or byte array into a RLP encoded value."}],["meta",{"property":"og:description","content":"Encodes a hex value or byte array into a RLP encoded value."}]]},"headers":[],"relativePath":"docs/utilities/toRlp.md","filePath":"docs/utilities/toRlp.md"}'),l={name:"docs/utilities/toRlp.md"},p=o(`<h1 id="torlp" tabindex="-1">toRlp <a class="header-anchor" href="#torlp" aria-label="Permalink to &quot;toRlp&quot;">​</a></h1><p>Encodes a hex value or byte array into a <a href="https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/" target="_blank" rel="noreferrer">Recursive-Length Prefix (RLP)</a> encoded value.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { toRlp } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { toRlp } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { toRlp } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x123456789&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x850123456789&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toRlp</span><span style="color:#E1E4E8;">([</span><span style="color:#9ECBFF;">&#39;0x7f&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0x7f&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;0x8081e8&#39;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0xc67f7f838081e8&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uint8Array</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;">]))</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x89010203040506070809&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x123456789&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;bytes&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array [133, 1, 35, 69, 103, 137]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { toRlp } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toRlp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x123456789&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x850123456789&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toRlp</span><span style="color:#24292E;">([</span><span style="color:#032F62;">&#39;0x7f&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0x7f&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;0x8081e8&#39;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0xc67f7f838081e8&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toRlp</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uint8Array</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">9</span><span style="color:#24292E;">]))</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;0x89010203040506070809&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toRlp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x123456789&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;bytes&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array [133, 1, 35, 69, 103, 137]</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Hex | ByteArray</code></p><p>The hex value or byte array.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Hex | ByteArray</code></li></ul><p>The value to RLP encode.</p><h3 id="to" tabindex="-1">to <a class="header-anchor" href="#to" aria-label="Permalink to &quot;to&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>&quot;bytes&quot; | &quot;hex&quot;</code></li><li><strong>Default:</strong> <code>&quot;hex&quot;</code></li></ul><p>The output type.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">toRlp</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x123456789&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;bytes&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array [133, 1, 35, 69, 103, 137]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">toRlp</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x123456789&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;bytes&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array [133, 1, 35, 69, 103, 137]</span></span></code></pre></div>`,17),e=[p];function t(r,c,y,i,E,d){return n(),a("div",null,e)}const F=s(l,[["render",t]]);export{h as __pageData,F as default};
