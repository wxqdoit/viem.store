import{_ as s,c as a,o as n,Q as l}from"./chunks/framework.a5052463.js";const u=JSON.parse('{"title":"toBytes","description":"Encodes a string, hex value, number or boolean to a byte array.","frontmatter":{"head":[["meta",{"property":"og:title","content":"toBytes"}],["meta",{"name":"description","content":"Encodes a string, hex value, number or boolean to a byte array."}],["meta",{"property":"og:description","content":"Encodes a string, hex value, number or boolean to a byte array."}]]},"headers":[],"relativePath":"docs/utilities/toBytes.md","filePath":"docs/utilities/toBytes.md"}'),o={name:"docs/utilities/toBytes.md"},e=l(`<h1 id="tobytes" tabindex="-1">toBytes <a class="header-anchor" href="#tobytes" aria-label="Permalink to &quot;toBytes&quot;">​</a></h1><p>Encodes a string, hex value, number or boolean to a byte array.</p><p>Shortcut Functions:</p><ul><li><a href="#hextobytes">hexToBytes</a></li><li><a href="#stringtobytes">stringToBytes</a></li><li><a href="#numbertobytes">numberToBytes</a></li><li><a href="#booltobytes">boolToBytes</a></li></ul><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { toBytes } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { toBytes } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { toBytes } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello world&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x48656c6c6f20576f726c6421&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">420</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([1, 164])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">toBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([1])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { toBytes } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello world&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x48656c6c6f20576f726c6421&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">420</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([1, 164])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">toBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([1])</span></span></code></pre></div><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>ByteArray</code></p><p>The byte array represented as a <code>Uint8Array</code>.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string | Hex</code></li></ul><p>The value to encode as bytes.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#B392F0;">toBytes</span><span style="color:#E1E4E8;">(</span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;Hello world&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#6F42C1;">toBytes</span><span style="color:#24292E;">(</span></span>
<span class="line highlighted"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;Hello world&#39;</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span></code></pre></div><h3 id="options" tabindex="-1">options <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-highlighted-lines vp-code-dark"><code><span class="line"><span style="color:#B392F0;">toBytes</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&#39;Hello world&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line highlighted"><span style="color:#E1E4E8;">  { size: </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span></span></code></pre><pre class="shiki github-light has-highlighted-lines vp-code-light"><code><span class="line"><span style="color:#6F42C1;">toBytes</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&#39;Hello world&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line highlighted"><span style="color:#24292E;">  { size: </span><span style="color:#005CC5;">32</span><span style="color:#24292E;"> }</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span></span></code></pre></div><h2 id="shortcut-functions" tabindex="-1">Shortcut Functions <a class="header-anchor" href="#shortcut-functions" aria-label="Permalink to &quot;Shortcut Functions&quot;">​</a></h2><h3 id="hextobytes" tabindex="-1">hexToBytes <a class="header-anchor" href="#hextobytes" aria-label="Permalink to &quot;hexToBytes&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Hex</code></li></ul><p>Encodes a hex value to a byte array.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { numberToHex } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">hexToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x48656c6c6f20576f726c6421&#39;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">hexToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;0x48656c6c6f20576f726c6421&#39;</span><span style="color:#E1E4E8;">, { size: </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { numberToHex } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">hexToBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x48656c6c6f20576f726c6421&#39;</span><span style="color:#24292E;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">hexToBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;0x48656c6c6f20576f726c6421&#39;</span><span style="color:#24292E;">, { size: </span><span style="color:#005CC5;">32</span><span style="color:#24292E;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span></span></code></pre></div><h3 id="stringtobytes" tabindex="-1">stringToBytes <a class="header-anchor" href="#stringtobytes" aria-label="Permalink to &quot;stringToBytes&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>Hex</code></li></ul><p>Encodes a string to a byte array.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { numberToHex } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">stringToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello world&#39;</span><span style="color:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">stringToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello world&#39;</span><span style="color:#E1E4E8;">, { size: </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { numberToHex } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">stringToBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello world&#39;</span><span style="color:#24292E;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">stringToBytes</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello world&#39;</span><span style="color:#24292E;">, { size: </span><span style="color:#005CC5;">32</span><span style="color:#24292E;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])</span></span></code></pre></div><h3 id="numbertobytes" tabindex="-1">numberToBytes <a class="header-anchor" href="#numbertobytes" aria-label="Permalink to &quot;numberToBytes&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number | bigint</code></li></ul><p>Encodes a number to a byte array.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { numberToHex } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">numberToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">420</span><span style="color:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([1, 164])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">numberToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">420</span><span style="color:#E1E4E8;">, { size: </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 164])</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { numberToHex } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">numberToBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">420</span><span style="color:#24292E;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([1, 164])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">numberToBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">420</span><span style="color:#24292E;">, { size: </span><span style="color:#005CC5;">32</span><span style="color:#24292E;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 164])</span></span></code></pre></div><h3 id="booltobytes" tabindex="-1">boolToBytes <a class="header-anchor" href="#booltobytes" aria-label="Permalink to &quot;boolToBytes&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean</code></li></ul><p>Encodes a boolean to a byte array.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { boolToHex } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">boolToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([1])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#B392F0;">boolToBytes</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, { size: </span><span style="color:#79B8FF;">32</span><span style="color:#E1E4E8;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { boolToHex } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">boolToBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([1])</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#6F42C1;">boolToBytes</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, { size: </span><span style="color:#005CC5;">32</span><span style="color:#24292E;"> }) </span></span>
<span class="line has-focus"><span style="color:#6A737D;">// Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])</span></span></code></pre></div>`,35),p=[e];function t(c,r,i,y,E,h){return n(),a("div",null,p)}const b=s(o,[["render",t]]);export{u as __pageData,b as default};
