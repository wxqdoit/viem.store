import{_ as s,c as a,o as n,Q as o}from"./chunks/framework.a5052463.js";const h=JSON.parse('{"title":"JSON-RPC Account","description":"A function to create a JSON-RPC Account.","frontmatter":{"head":[["meta",{"property":"og:title","content":"JSON-RPC Account"}],["meta",{"name":"description","content":"A function to create a JSON-RPC Account."}],["meta",{"property":"og:description","content":"A function to create a JSON-RPC Account."}]]},"headers":[],"relativePath":"docs/accounts/jsonRpc.md","filePath":"docs/accounts/jsonRpc.md"}'),e={name:"docs/accounts/jsonRpc.md"},l=o(`<h1 id="json-rpc-account" tabindex="-1">JSON-RPC Account <a class="header-anchor" href="#json-rpc-account" aria-label="Permalink to &quot;JSON-RPC Account&quot;">​</a></h1><p>A JSON-RPC Account <strong>defers</strong> signing of transactions &amp; messages to the target Wallet over JSON-RPC. An example could be sending a transaction via a Browser Extension Wallet (e.g. MetaMask) with the <code>window.ethereum</code> Provider.</p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>A JSON-RPC Account can just be initialized as an <a href="/docs/glossary/types.html#address">Address</a> string. In the usage below, we are extracting the address from a Browser Extension Wallet (e.g. MetaMask) with the <code>window.ethereum</code> Provider via <code>eth_requestAccounts</code>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createWalletClient, custom } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">address</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> window.ethereum.</span><span style="color:#B392F0;">request</span><span style="color:#E1E4E8;">({ </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  method: </span><span style="color:#9ECBFF;">&#39;eth_requestAccounts&#39;</span><span style="color:#E1E4E8;"> </span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createWalletClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  account: address, </span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">custom</span><span style="color:#E1E4E8;">(window.ethereum)</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createWalletClient, custom } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line has-focus"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">address</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> window.ethereum.</span><span style="color:#6F42C1;">request</span><span style="color:#24292E;">({ </span></span>
<span class="line has-focus"><span style="color:#24292E;">  method: </span><span style="color:#032F62;">&#39;eth_requestAccounts&#39;</span><span style="color:#24292E;"> </span></span>
<span class="line has-focus"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createWalletClient</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  account: address, </span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">custom</span><span style="color:#24292E;">(window.ethereum)</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div>`,5),t=[l];function p(c,r,i,E,y,d){return n(),a("div",null,t)}const m=s(e,[["render",p]]);export{h as __pageData,m as default};
