import{_ as s,c as a,o as n,Q as l,k as o}from"./chunks/framework.0fcaa977.js";const m=JSON.parse('{"title":"Public Client","description":"A function to create a Public Client.","frontmatter":{"head":[["meta",{"property":"og:title","content":"Public Client"}],["meta",{"name":"description","content":"A function to create a Public Client."}],["meta",{"property":"og:description","content":"A function to create a Public Client."}]]},"headers":[],"relativePath":"docs/clients/public.md","filePath":"docs/clients/public.md"}'),e={name:"docs/clients/public.md"},p=l(`<h1 id="public-client" tabindex="-1">Public Client <a class="header-anchor" href="#public-client" aria-label="Permalink to &quot;Public Client&quot;">​</a></h1><p>A Public Client is an interface to &quot;public&quot; <a href="https://ethereum.org/en/developers/docs/apis/json-rpc/" target="_blank" rel="noreferrer">JSON-RPC API</a> methods such as retrieving block numbers, transactions, reading from smart contracts, etc through <a href="/docs/actions/public/introduction.html">Public Actions</a>.</p><p>The <code>createPublicClient</code> function sets up a Public Client with a given <a href="/docs/clients/intro.html">Transport</a> configured for a <a href="/docs/clients/chains.html">Chain</a>.</p><h2 id="import" tabindex="-1">Import <a class="header-anchor" href="#import" aria-label="Permalink to &quot;Import&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span></code></pre></div><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>Initialize a Client with your desired <a href="/docs/clients/chains.html">Chain</a> (e.g. <code>mainnet</code>) and <a href="/docs/clients/intro.html">Transport</a> (e.g. <code>http</code>).</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { createPublicClient, http } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { mainnet } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({ </span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { createPublicClient, http } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { mainnet } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;viem/chains&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({ </span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><p>Then you can consume <a href="/docs/actions/public/introduction.html">Public Actions</a>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line has-focus"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">blockNumber</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> client.</span><span style="color:#B392F0;">getBlockNumber</span><span style="color:#E1E4E8;">() </span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line has-focus"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">blockNumber</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> client.</span><span style="color:#6F42C1;">getBlockNumber</span><span style="color:#24292E;">() </span></span></code></pre></div><h2 id="optimization" tabindex="-1">Optimization <a class="header-anchor" href="#optimization" aria-label="Permalink to &quot;Optimization&quot;">​</a></h2><p>The Public Client also supports <a href="#multicall"><code>eth_call</code> Aggregation</a> for improved performance.</p><h3 id="eth-call-aggregation-via-multicall" tabindex="-1"><code>eth_call</code> Aggregation (via Multicall) <a class="header-anchor" href="#eth-call-aggregation-via-multicall" aria-label="Permalink to &quot;\`eth_call\` Aggregation (via Multicall)&quot;">​</a></h3><p>The Public Client supports the aggregation of <code>eth_call</code> requests into a single multicall (<code>aggregate3</code>) request.</p><p>This means for every Action that utilizes an <code>eth_call</code> request (ie. <code>readContract</code>), the Public Client will batch the requests (over a timed period) and send it to the RPC Provider in a single multicall request. This can dramatically improve network performance, and decrease the amount of <a href="https://docs.alchemy.com/reference/compute-units" target="_blank" rel="noreferrer">Compute Units (CU)</a> used by RPC Providers like Alchemy, Infura, etc.</p><p>The Public Client schedules the aggregation of <code>eth_call</code> requests over a given time period. By default, it executes the batch request at the end of the current <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop#queue" target="_blank" rel="noreferrer">JavaScript message queue</a> (a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop#zero_delays" target="_blank" rel="noreferrer">zero delay</a>), however, consumers can specify a custom <code>wait</code> period (in ms).</p><p>You can enable <code>eth_call</code> aggregation by setting the <code>batch.multicall</code> flag to <code>true</code>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  batch: {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    multicall: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  batch: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">    multicall: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><blockquote><p>You can also <a href="#batch-multicall-batchsize-optional">customize the <code>multicall</code> options</a>.</p></blockquote><p>Now, when you start to utilize <code>readContract</code> Actions, the Public Client will batch and send over those requests at the end of the message queue (or custom time period) in a single <code>eth_call</code> multicall request:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">contract</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getContract</span><span style="color:#E1E4E8;">({ address, abi })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// The below will send a single request to the RPC Provider.</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">totalSupply</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">symbol</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">tokenUri</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">balance</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Promise</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">all</span><span style="color:#E1E4E8;">([</span></span>
<span class="line"><span style="color:#E1E4E8;">  contract.read.</span><span style="color:#B392F0;">name</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">  contract.read.</span><span style="color:#B392F0;">totalSupply</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">  contract.read.</span><span style="color:#B392F0;">symbol</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">  contract.read.</span><span style="color:#B392F0;">tokenURI</span><span style="color:#E1E4E8;">([</span><span style="color:#79B8FF;">420</span><span style="color:#F97583;">n</span><span style="color:#E1E4E8;">]),</span></span>
<span class="line"><span style="color:#E1E4E8;">  contract.read.</span><span style="color:#B392F0;">balanceOf</span><span style="color:#E1E4E8;">([address]),</span></span>
<span class="line"><span style="color:#E1E4E8;">])</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">contract</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getContract</span><span style="color:#24292E;">({ address, abi })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// The below will send a single request to the RPC Provider.</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">name</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">totalSupply</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">symbol</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">tokenUri</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">balance</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Promise</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">all</span><span style="color:#24292E;">([</span></span>
<span class="line"><span style="color:#24292E;">  contract.read.</span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  contract.read.</span><span style="color:#6F42C1;">totalSupply</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  contract.read.</span><span style="color:#6F42C1;">symbol</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">  contract.read.</span><span style="color:#6F42C1;">tokenURI</span><span style="color:#24292E;">([</span><span style="color:#005CC5;">420</span><span style="color:#D73A49;">n</span><span style="color:#24292E;">]),</span></span>
<span class="line"><span style="color:#24292E;">  contract.read.</span><span style="color:#6F42C1;">balanceOf</span><span style="color:#24292E;">([address]),</span></span>
<span class="line"><span style="color:#24292E;">])</span></span></code></pre></div><blockquote><p>Read more on <a href="/docs/contract/getContract.html">Contract Instances</a>.</p></blockquote><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="transport" tabindex="-1">transport <a class="header-anchor" href="#transport" aria-label="Permalink to &quot;transport&quot;">​</a></h3><ul><li><strong>Type:</strong> <a href="/docs/glossary/types.html#transport">Transport</a></li></ul><p>The <a href="/docs/clients/intro.html">Transport</a> of the Public Client.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(), </span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(), </span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="chain-optional" tabindex="-1">chain (optional) <a class="header-anchor" href="#chain-optional" aria-label="Permalink to &quot;chain (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <a href="/docs/glossary/types.html#chain">Chain</a></li></ul><p>The <a href="/docs/clients/chains.html">Chain</a> of the Public Client.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  chain: mainnet, </span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  chain: mainnet, </span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="batch-optional" tabindex="-1">batch (optional) <a class="header-anchor" href="#batch-optional" aria-label="Permalink to &quot;batch (optional)&quot;">​</a></h3><p>Flags for batch settings.</p><h3 id="batch-multicall-optional" tabindex="-1">batch.multicall (optional) <a class="header-anchor" href="#batch-multicall-optional" aria-label="Permalink to &quot;batch.multicall (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>boolean | MulticallBatchOptions</code></li><li><strong>Default:</strong> <code>false</code></li></ul><p>Toggle to enable <code>eth_call</code> multicall aggregation.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  batch: {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">    multicall: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  batch: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">    multicall: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="batch-multicall-batchsize-optional" tabindex="-1">batch.multicall.batchSize (optional) <a class="header-anchor" href="#batch-multicall-batchsize-optional" aria-label="Permalink to &quot;batch.multicall.batchSize (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <code>1_024</code></li></ul><p>The maximum size (in bytes) for each multicall (<code>aggregate3</code>) calldata chunk.</p><blockquote><p>Note: Some RPC Providers limit the amount of calldata that can be sent in a single request. It is best to check with your RPC Provider to see if there are any calldata size limits to <code>eth_call</code> requests.</p></blockquote><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  batch: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    multicall: {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      batchSize: </span><span style="color:#79B8FF;">512</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  batch: {</span></span>
<span class="line"><span style="color:#24292E;">    multicall: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">      batchSize: </span><span style="color:#005CC5;">512</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="batch-multicall-wait-optional" tabindex="-1">batch.multicall.wait (optional) <a class="header-anchor" href="#batch-multicall-wait-optional" aria-label="Permalink to &quot;batch.multicall.wait (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <code>0</code> (<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop#zero_delays" target="_blank" rel="noreferrer">zero delay</a>)</li></ul><p>The maximum number of milliseconds to wait before sending a batch.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  batch: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    multicall: {</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">      wait: </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  batch: {</span></span>
<span class="line"><span style="color:#24292E;">    multicall: {</span></span>
<span class="line has-focus"><span style="color:#24292E;">      wait: </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="cachetime-optional" tabindex="-1">cacheTime (optional) <a class="header-anchor" href="#cachetime-optional" aria-label="Permalink to &quot;cacheTime (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <code>client.pollingInterval</code></li></ul><p>Time (in ms) that cached data will remain in memory.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  cacheTime: </span><span style="color:#79B8FF;">10_000</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line has-focus"><span style="color:#24292E;">  cacheTime: </span><span style="color:#005CC5;">10_000</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="key-optional" tabindex="-1">key (optional) <a class="header-anchor" href="#key-optional" aria-label="Permalink to &quot;key (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&quot;public&quot;</code></li></ul><p>A key for the Client.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  key: </span><span style="color:#9ECBFF;">&#39;public&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  key: </span><span style="color:#032F62;">&#39;public&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="name-optional" tabindex="-1">name (optional) <a class="header-anchor" href="#name-optional" aria-label="Permalink to &quot;name (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&quot;Public Client&quot;</code></li></ul><p>A name for the Client.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  name: </span><span style="color:#9ECBFF;">&#39;Public Client&#39;</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  name: </span><span style="color:#032F62;">&#39;Public Client&#39;</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h3 id="pollinginterval-optional" tabindex="-1">pollingInterval (optional) <a class="header-anchor" href="#pollinginterval-optional" aria-label="Permalink to &quot;pollingInterval (optional)&quot;">​</a></h3><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <code>4_000</code></li></ul><p>Frequency (in ms) for polling enabled Actions.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark has-focused-lines vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">client</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">createPublicClient</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#E1E4E8;">  pollingInterval: </span><span style="color:#79B8FF;">10_000</span><span style="color:#E1E4E8;">, </span></span>
<span class="line"><span style="color:#E1E4E8;">  transport: </span><span style="color:#B392F0;">http</span><span style="color:#E1E4E8;">(),</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span></code></pre><pre class="shiki github-light has-focused-lines vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">client</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">createPublicClient</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">  chain: mainnet,</span></span>
<span class="line has-focus"><span style="color:#24292E;">  pollingInterval: </span><span style="color:#005CC5;">10_000</span><span style="color:#24292E;">, </span></span>
<span class="line"><span style="color:#24292E;">  transport: </span><span style="color:#6F42C1;">http</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">})</span></span></code></pre></div><h2 id="live-example" tabindex="-1">Live Example <a class="header-anchor" href="#live-example" aria-label="Permalink to &quot;Live Example&quot;">​</a></h2><p>Check out the usage of <code>createPublicClient</code> in the live <a href="https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/clients_public-client" target="_blank" rel="noreferrer">Public Client Example</a> below.</p>`,64),t=o("iframe",{frameborder:"0",width:"100%",height:"500px",src:"https://stackblitz.com/github/wagmi-dev/viem/tree/main/examples/clients_public-client?embed=1&file=index.ts&hideNavigation=1&hideDevTools=true&terminalHeight=0&ctl=1"},null,-1),c=[p,t];function r(i,E,y,h,d,u){return n(),a("div",null,c)}const g=s(e,[["render",r]]);export{m as __pageData,g as default};
